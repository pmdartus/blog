---
import { getCollection } from "astro:content";

import Layout from "../../layouts/Layout.astro";
import FormattedDate from "../../components/FormattedDate.astro";

import { computeReadTime } from "../../utils/readTime";

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { title, description, publishDate, updateDate } = post.data;

const meta = {
  type: "post",
  title,
  description,
  ogImage: new URL(Astro.url.pathname + "og.png", Astro.site),
  publishDate: updateDate ?? publishDate,
} as const;

const { Content } = await post.render();
const readTime = computeReadTime(post.body);
---

<Layout meta={meta}>
  <h1>{title}</h1>

  <aside>
    <span>Published on <FormattedDate date={publishDate} /></span>
    {
      updateDate && (
        <span>
          • Updated on <FormattedDate date={updateDate} />
        </span>
      )
    }
    <span>• {readTime} minute{readTime > 1 ? "s" : ""} read</span>
  </aside>

  <Content />

  <p>
    <a href="/posts/">← Back to posts</a>
  </p>
</Layout>

<style>
  aside {
    color: var(--color-text-alt);
    font-size: 0.9em;
  }
</style>
